# Ejercicio 5 Count Bits

def countBits(n):
    return n.bit_length()

# Ejercicio 6 Modulus

def modulus(n):
    if isinstance(n, int):
        return n % 2
    else:
        return -1

#	Ejercicio 7 Simple Sort

def simpleSort(arr):

    n = len(arr)

    for i in range(n):
        j = 0
        stop = n - i
        while j < stop - 1:
            if arr[j] > arr[j + 1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
            j += 1
    return arr

#	Ejercicio 8 Base Conversion

def baseConversion(n, x):
    return hex(int(n,x))[2:]

#	Ejercicio 9 Mex Function

def mexFunction(s, upperBound):
    found = -1
    for i in range(upperBound):
        if not i in s:
            found = i
            break
    else:
        found = upperBound

    return found

#	Ejercicio 10 List Beautifier

def listBeautifier(a):
    res = a[:]
    while res and res[0] != res[-1]:
        a, *res, b = res
    return res

#	Ejercicio 11 String Definition

Definitions 3 and 4

#	Ejercicio 12 Fix Messagge

def fixMessage(message):
    return message.capitalize()

#	Ejercicio 13 Cat Walk

def catWalk(code):
    return ' '.join(code.split())

#	Ejercicio 14 Convert Tabs

def convertTabs(code, x):
    return code.replace("\t", " "*x)

#	Ejercicio 15 Feedback Review

import textwrap

def feedbackReview(feedback, size):
    return textwrap.wrap(feedback, size)

#	Ejercicio 16 Is Word Palindrome

def isWordPalindrome(word):
    return word == word[::-1]

# Ejercicio 17 Permutation Cipher

def permutationCipher(password, key):
    table = {ord('a') + i : ord(k) for i, k in enumerate(key)}
    return password.translate(table)
    
# Ejercicio 18 Competitive Eating

def competitiveEating(t, width, precision):
    return '{:^{}.{}f}'.format(t, width, precision)
    
# Ejercicio 19 New Style Formatting

import re
def newStyleFormatting(s):
    s = re.sub('%%', '{%}', s)
    s = re.sub ('%[dfgexXocbs]', '{}', s)
    return re.sub('{%}', '%', s)

# Ejercicio 20 Get Commit

def getCommit(commit):
    return ''.join([i for i in commit if i not in ['0', '?', '+', '!']])
